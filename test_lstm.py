"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LSTM –º–æ–¥–µ–ª–∏
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from models import RealNeuralModel
from utils import load_config

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LSTM –º–æ–¥–µ–ª–∏...")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config = load_config('configs/experiment_config.yaml')
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    X_train = [
        "–æ—Ç–ª–∏—á–Ω—ã–π —Ñ–∏–ª—å–º –æ—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –∞–∫—Ç–µ—Ä—Å–∫–∞—è –∏–≥—Ä–∞",
        "—É–∂–∞—Å–Ω–æ–µ –∫–∏–Ω–æ —Å–∫—É—á–Ω–æ –∏ –Ω–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", 
        "–Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å–º –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–¥–∏–Ω —Ä–∞–∑",
        "–≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ —Ä–µ–∂–∏—Å—Å—É—Ä–∞ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ",
        "—Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω –æ–∂–∏–¥–∞–ª –±–æ–ª—å—à–µ–≥–æ –æ—Ç —Ä–µ–∂–∏—Å—Å–µ—Ä–∞"
    ]
    y_train = [1, 0, 1, 1, 0]  # 1-–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π, 0-–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π
    
    X_test = [
        "—Ö–æ—Ä–æ—à–∏–π —Å—é–∂–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∫–æ–Ω—Ü–æ–≤–∫–∞",
        "–ø–ª–æ—Ö–∞—è –∞–∫—Ç–µ—Ä—Å–∫–∞—è –∏–≥—Ä–∞ –Ω–µ –≤–ø–µ—á–∞—Ç–ª–∏–ª–æ"
    ]
    y_test = [1, 0]
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ LSTM –º–æ–¥–µ–ª–∏...")
    model = RealNeuralModel(config)
    
    print("üéØ –û–±—É—á–µ–Ω–∏–µ LSTM...")
    success = model.train_all_models(X_train, y_train)
    
    if success:
        print("üìä –û—Ü–µ–Ω–∫–∞ LSTM...")
        metrics = model.evaluate_lstm('lstm', X_test, y_test)
        
        if metrics:
            print("\n‚úÖ LSTM —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
            for metric, value in metrics.items():
                print(f"   {metric}: {value:.4f}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ü–µ–Ω–∫–∏ LSTM")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è LSTM")

if __name__ == "__main__":
    main()